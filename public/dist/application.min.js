"use strict";var ApplicationConfiguration=function(){var applicationModuleName="test2",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("airlineowners"),ApplicationConfiguration.registerModule("airlines"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("flights"),ApplicationConfiguration.registerModule("pilots"),ApplicationConfiguration.registerModule("stem4alls"),ApplicationConfiguration.registerModule("users"),angular.module("airlineowners").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAirlineowners",{url:"/airlineowners",templateUrl:"modules/airlineowners/views/list-airlineowners.client.view.html"}).state("createAirlineowner",{url:"/airlineowners/create",templateUrl:"modules/airlineowners/views/create-airlineowner.client.view.html"}).state("viewAirlineowner",{url:"/airlineowners/:airlineownerId",templateUrl:"modules/airlineowners/views/view-airlineowner.client.view.html"}).state("editAirlineowner",{url:"/airlineowners/:airlineownerId/edit",templateUrl:"modules/airlineowners/views/edit-airlineowner.client.view.html"})}]),angular.module("airlineowners").controller("AirlineownersController",["$scope","$stateParams","$location","Authentication","Airlineowners",function($scope,$stateParams,$location,Authentication,Airlineowners){$scope.authentication=Authentication,$scope.create=function(){var airlineowner=new Airlineowners({name:this.name});airlineowner.$save(function(response){$location.path("airlineowners/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(airlineowner){if(airlineowner){airlineowner.$remove();for(var i in $scope.airlineowners)$scope.airlineowners[i]===airlineowner&&$scope.airlineowners.splice(i,1)}else $scope.airlineowner.$remove(function(){$location.path("airlineowners")})},$scope.update=function(){var airlineowner=$scope.airlineowner;airlineowner.$update(function(){$location.path("airlineowners/"+airlineowner._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.airlineowners=Airlineowners.query()},$scope.findOne=function(){$scope.airlineowner=Airlineowners.get({airlineownerId:$stateParams.airlineownerId})}}]),angular.module("airlineowners").factory("Airlineowners",["$resource",function($resource){return $resource("airlineowners/:airlineownerId",{airlineownerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("airlines").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAirlines",{url:"/airlines",templateUrl:"modules/airlines/views/list-airlines.client.view.html"}).state("createAirline",{url:"/airlines/create",templateUrl:"modules/airlines/views/create-airline.client.view.html"}).state("viewAirline",{url:"/airlines/:airlineId",templateUrl:"modules/airlines/views/view-airline.client.view.html"}).state("editAirline",{url:"/airlines/:airlineId/edit",templateUrl:"modules/airlines/views/edit-airline.client.view.html"})}]),angular.module("airlines").controller("AirlinesController",["$scope","$stateParams","$location","Authentication","Airlines",function($scope,$stateParams,$location,Authentication,Airlines){$scope.authentication=Authentication,$scope.create=function(){var airline=new Airlines({name:this.name});airline.$save(function(response){$location.path("airlines/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(airline){if(airline){airline.$remove();for(var i in $scope.airlines)$scope.airlines[i]===airline&&$scope.airlines.splice(i,1)}else $scope.airline.$remove(function(){$location.path("airlines")})},$scope.update=function(){var airline=$scope.airline;airline.$update(function(){$location.path("airlines/"+airline._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.airlines=Airlines.query()},$scope.findOne=function(){$scope.airline=Airlines.get({airlineId:$stateParams.airlineId})}}]),angular.module("airlines").factory("Airlines",["$resource",function($resource){return $resource("airlines/:airlineId",{airlineId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("flights").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Flights","flights","dropdown","/flights(/create)?"),Menus.addSubMenuItem("topbar","flights","List Flights","flights"),Menus.addSubMenuItem("topbar","flights","New Flight","flights/create")}]),angular.module("flights").config(["$stateProvider",function($stateProvider){$stateProvider.state("listFlights",{url:"/flights",templateUrl:"modules/flights/views/list-flights.client.view.html"}).state("createFlight",{url:"/flights/create",templateUrl:"modules/flights/views/create-flight.client.view.html"}).state("viewFlight",{url:"/flights/:flightId",templateUrl:"modules/flights/views/view-flight.client.view.html"}).state("editFlight",{url:"/flights/:flightId/edit",templateUrl:"modules/flights/views/edit-flight.client.view.html"})}]),angular.module("flights").controller("FlightsController",["$scope","$stateParams","$location","Authentication","Flights",function($scope,$stateParams,$location,Authentication,Flights){$scope.authentication=Authentication,$scope.create=function(){var flight=new Flights({name:this.name});flight.$save(function(response){$location.path("flights/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(flight){if(flight){flight.$remove();for(var i in $scope.flights)$scope.flights[i]===flight&&$scope.flights.splice(i,1)}else $scope.flight.$remove(function(){$location.path("flights")})},$scope.update=function(){var flight=$scope.flight;flight.$update(function(){$location.path("flights/"+flight._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.flights=Flights.query()},$scope.findOne=function(){$scope.flight=Flights.get({flightId:$stateParams.flightId})}}]),angular.module("flights").factory("Flights",["$resource",function($resource){return $resource("flights/:flightId",{flightId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pilots").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Pilots","pilots","dropdown","/pilots(/create)?"),Menus.addSubMenuItem("topbar","pilots","List Pilots","pilots"),Menus.addSubMenuItem("topbar","pilots","New Pilot","pilots/create")}]),angular.module("pilots").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPilots",{url:"/pilots",templateUrl:"modules/pilots/views/list-pilots.client.view.html"}).state("createPilot",{url:"/pilots/create",templateUrl:"modules/pilots/views/create-pilot.client.view.html"}).state("viewPilot",{url:"/pilots/:pilotId",templateUrl:"modules/pilots/views/view-pilot.client.view.html"}).state("editPilot",{url:"/pilots/:pilotId/edit",templateUrl:"modules/pilots/views/edit-pilot.client.view.html"})}]),angular.module("pilots").controller("PilotsController",["$scope","$stateParams","$location","Authentication","Pilots",function($scope,$stateParams,$location,Authentication,Pilots){$scope.authentication=Authentication,$scope.create=function(){var pilot=new Pilots({name:this.name});pilot.$save(function(response){$location.path("pilots/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pilot){if(pilot){pilot.$remove();for(var i in $scope.pilots)$scope.pilots[i]===pilot&&$scope.pilots.splice(i,1)}else $scope.pilot.$remove(function(){$location.path("pilots")})},$scope.update=function(){var pilot=$scope.pilot;pilot.$update(function(){$location.path("pilots/"+pilot._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pilots=Pilots.query()},$scope.findOne=function(){$scope.pilot=Pilots.get({pilotId:$stateParams.pilotId})}}]),angular.module("pilots").factory("Pilots",["$resource",function($resource){return $resource("pilots/:pilotId",{pilotId:"@_id"},{update:{method:"PUT"}})}]),angular.module("stem4alls").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Stem4alls","stem4alls","dropdown","/stem4alls(/create)?"),Menus.addSubMenuItem("topbar","stem4alls","List Stem4alls","stem4alls"),Menus.addSubMenuItem("topbar","stem4alls","New Stem4all","stem4alls/create")}]),angular.module("stem4alls").config(["$stateProvider",function($stateProvider){$stateProvider.state("listStem4alls",{url:"/stem4alls",templateUrl:"modules/stem4alls/views/list-stem4alls.client.view.html"}).state("createStem4all",{url:"/stem4alls/create",templateUrl:"modules/stem4alls/views/create-stem4all.client.view.html"}).state("viewStem4all",{url:"/stem4alls/:stem4allId",templateUrl:"modules/stem4alls/views/view-stem4all.client.view.html"}).state("editStem4all",{url:"/stem4alls/:stem4allId/edit",templateUrl:"modules/stem4alls/views/edit-stem4all.client.view.html"})}]),angular.module("stem4alls").controller("Stem4allsController",["$scope","$stateParams","$location","Authentication","Stem4alls",function($scope,$stateParams,$location,Authentication,Stem4alls){$scope.authentication=Authentication,$scope.create=function(){var stem4all=new Stem4alls({title:this.title});stem4all.$save(function(response){$location.path("stem4alls/"+response._id),$scope.title=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(stem4all){if(stem4all){stem4all.$remove();for(var i in $scope.stem4alls)$scope.stem4alls[i]===stem4all&&$scope.stem4alls.splice(i,1)}else $scope.stem4all.$remove(function(){$location.path("stem4alls")})},$scope.update=function(){var stem4all=$scope.stem4all;stem4all.$update(function(){$location.path("stem4alls/"+stem4all._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.stem4alls=Stem4alls.query()},$scope.findOne=function(){$scope.stem4all=Stem4alls.get({stem4allId:$stateParams.stem4allId})}}]),angular.module("stem4alls").factory("Stem4alls",["$resource",function($resource){return $resource("stem4alls/:stem4allId",{stem4allId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);